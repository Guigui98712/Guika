-- Criar tabela para checklists
CREATE TABLE IF NOT EXISTS trello_checklists (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id BIGINT REFERENCES trello_cards(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    position INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Criar tabela para itens do checklist
CREATE TABLE IF NOT EXISTS trello_checklist_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    checklist_id BIGINT REFERENCES trello_checklists(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    checked BOOLEAN DEFAULT false,
    position INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Criar Ã­ndices para melhor performance
CREATE INDEX IF NOT EXISTS idx_checklist_card_id ON trello_checklists(card_id);
CREATE INDEX IF NOT EXISTS idx_checklist_items_checklist_id ON trello_checklist_items(checklist_id);

-- Desabilitar RLS para essas tabelas
ALTER TABLE trello_checklists DISABLE ROW LEVEL SECURITY;
ALTER TABLE trello_checklist_items DISABLE ROW LEVEL SECURITY;

-- Criar trigger para atualizar o updated_at
CREATE TRIGGER update_trello_checklists_updated_at
    BEFORE UPDATE ON trello_checklists
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_trello_checklist_items_updated_at
    BEFORE UPDATE ON trello_checklist_items
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column(); 